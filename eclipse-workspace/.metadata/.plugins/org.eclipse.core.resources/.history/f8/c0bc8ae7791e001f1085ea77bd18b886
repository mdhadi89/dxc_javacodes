package hadiEncoder;

import java.util.HashMap;
import java.util.Map;

public class Encoders {

	// final variable cannot be changed
    private static final String REFERENCE_TABLE = "ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789()*+,-./"; // Reference table with 44 characters based on the pdf
    private static final String SHIFT_TABLE_1 = "/ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789()*+,-."; // Shift Table #1 for encoding based on the pdf
    private static final String SHIFT_TABLE_2 = "+,-./ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789()*"; // Shift Table #2 for encoding based on the pdf

    private static final Map<Character, Integer> charToIndex = new HashMap<>();
    static {
        for (int i = 0; i < REFERENCE_TABLE.length(); i++) {
            charToIndex.put(REFERENCE_TABLE.charAt(i), i);
        }
    }

    public static String encodeWithShiftTable1(String plainText) {
        return encode(plainText, SHIFT_TABLE_1, 'B');
    }

    public static String encodeWithShiftTable2(String plainText) {
        return encode(plainText, SHIFT_TABLE_2, 'F');
    }

    private static String encode(String plainText, String shiftTable, char spaceReplacement) {
        StringBuilder encodedText = new StringBuilder();
        for (char c : plainText.toUpperCase().toCharArray()) {
            if (c == ' ') {
                encodedText.append(spaceReplacement); // Replace space with the specified character
            } else if (charToIndex.containsKey(c)) {
                int index = charToIndex.get(c);
                char encodedChar = shiftTable.charAt(index);
                encodedText.append(encodedChar);
            } else {
                encodedText.append(c);
            }
        }
        return encodedText.toString();
    }

    public static void main(String[] args) {
        String input = "HELLO WORLD";
        String encodedWithShiftTable1 = encodeWithShiftTable1(input);
        String encodedWithShiftTable2 = encodeWithShiftTable2(input);

        System.out.println("Input: " + input);
        System.out.println("Encoded with Shift Table 1: " + encodedWithShiftTable1);
        System.out.println("Encoded with Shift Table 2: " + encodedWithShiftTable2);
    }
}
